version: '3.7'
services:
  postgres:
    container_name: graphql_lib_db
    image: postgres
    environment:
      - POSTGRES_USER=aninda
      - POSTGRES_PASSWORD=aninda
      - POSTGRES_DB=libgraphql
    volumes:
      - postgresgraphql:/var/lib/postgresql/data
      - ./db/init/:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    restart: always

  pgadmin:
    container_name: graphql_lib_pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-graphql@test.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-graphql}
      - PGADMIN_SERVER_JSON_FILE=/servers.json
    volumes:
      - pgadmingraphql:/var/lib/pgadmin:rw
      # - ./db/initsql:/var/lib/pgadmin/storage/tapup_shell.com:rw
      - ./db/servers.json:/servers.json
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    depends_on:
      - postgres

  genre-service:
    depends_on:
      - postgres
      - pgadmin
    image: genre-service
    build:
      context: ./genre-service/
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
    ports:
      - 4001:4001
    volumes:
      - /usr/src/app/node_modules
      - ./genre-service:/usr/src/app
    restart: on-failure:10

  gateway-service:
    depends_on:
      - postgres
      - pgadmin
      - genre-service
    image: gateway-service
    build:
      context: ./gateway-service/
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
    ports:
      - 4000:4000
    volumes:
      - /usr/src/app/node_modules
      - ./gateway-service:/usr/src/app
    restart: on-failure:10

volumes:
  postgresgraphql:
  pgadmingraphql: